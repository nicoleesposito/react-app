{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\Desktop\\\\git-projects\\\\react-app\\\\src\\\\components\\\\Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\n\n/**\r\n * Renders an array of strings passed in that can be filtered and added to as an unordered list.\r\n * @returns Component\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(_ref) {\n  _s();\n  let {\n    initialMenuItems\n  } = _ref;\n  // Step 2: Use state hook to maintain the menu items.\n  const [menuItems, setMenuItems] = useState(initialMenuItems);\n  const [newMenuItem, setNewMenuItem] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  // Step 3: Add new menu item to the state\n  const addMenuItem = useCallback(() => {\n    if (newMenuItem.trim() !== \"\") {\n      // Add the new menu item to the state\n      setMenuItems([newMenuItem, ...menuItems]);\n      setNewMenuItem(\"\"); // Clear the input field after adding\n    }\n  }, [newMenuItem, menuItems]);\n\n  // Step 4: Filter menu items based on the filter input\n  const filteredMenuItems = menuItems.filter(item => item.toLowerCase().includes(filter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newMenuItemValue\",\n      value: newMenuItem,\n      onChange: event => setNewMenuItem(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMenuItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"filter\",\n      type: \"text\",\n      value: filter,\n      onChange: event => setFilter(event.target.value),\n      placeholder: \"Filter by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMenuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"9uJAaehHQ/xgclC4QpFfGNnjx2E=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useCallback","Sidebar","initialMenuItems","menuItems","setMenuItems","newMenuItem","setNewMenuItem","filter","setFilter","addMenuItem","trim","filteredMenuItems","item","toLowerCase","includes","event","target","value","map","index"],"sources":["C:/Users/nicol/Desktop/git-projects/react-app/src/components/Sidebar.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\n/**\r\n * Renders an array of strings passed in that can be filtered and added to as an unordered list.\r\n * @returns Component\r\n */\r\nexport default function Sidebar({ initialMenuItems }) {\r\n  // Step 2: Use state hook to maintain the menu items.\r\n  const [menuItems, setMenuItems] = useState(initialMenuItems);\r\n  const [newMenuItem, setNewMenuItem] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  // Step 3: Add new menu item to the state\r\n  const addMenuItem = useCallback(() => {\r\n    if (newMenuItem.trim() !== \"\") {\r\n      // Add the new menu item to the state\r\n      setMenuItems([newMenuItem, ...menuItems]);\r\n      setNewMenuItem(\"\"); // Clear the input field after adding\r\n    }\r\n  }, [newMenuItem, menuItems]);\r\n\r\n  // Step 4: Filter menu items based on the filter input\r\n  const filteredMenuItems = menuItems.filter((item) =>\r\n    item.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        id=\"newMenuItemValue\"\r\n        value={newMenuItem}\r\n        onChange={(event) => setNewMenuItem(event.target.value)}\r\n      />\r\n      <br />\r\n      <button onClick={addMenuItem}>Add Item</button>\r\n      <br />\r\n      <input\r\n        id=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={(event) => setFilter(event.target.value)}\r\n        placeholder=\"Filter by...\"\r\n      />\r\n\r\n      {/* TODO 1: Render the menu items as an unordered list */}\r\n      <ul>\r\n        {filteredMenuItems.map((item, index) => (\r\n          <li key={index}>{item}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;;AAE7C;AACA;AACA;AACA;AAHA;AAIA,eAAe,SAASC,OAAO,OAAuB;EAAA;EAAA,IAAtB;IAAEC;EAAiB,CAAC;EAClD;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAACG,gBAAgB,CAAC;EAC5D,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMU,WAAW,GAAGT,WAAW,CAAC,MAAM;IACpC,IAAIK,WAAW,CAACK,IAAI,EAAE,KAAK,EAAE,EAAE;MAC7B;MACAN,YAAY,CAAC,CAACC,WAAW,EAAE,GAAGF,SAAS,CAAC,CAAC;MACzCG,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACD,WAAW,EAAEF,SAAS,CAAC,CAAC;;EAE5B;EACA,MAAMQ,iBAAiB,GAAGR,SAAS,CAACI,MAAM,CAAEK,IAAI,IAC9CA,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,MAAM,CAACM,WAAW,EAAE,CAAC,CAClD;EAED,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MAAM;MACX,EAAE,EAAC,kBAAkB;MACrB,KAAK,EAAER,WAAY;MACnB,QAAQ,EAAGU,KAAK,IAAKT,cAAc,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACxD,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,OAAO,EAAER,WAAY;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/C;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MACE,EAAE,EAAC,QAAQ;MACX,IAAI,EAAC,MAAM;MACX,KAAK,EAAEF,MAAO;MACd,QAAQ,EAAGQ,KAAK,IAAKP,SAAS,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;MACnD,WAAW,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAC1B,eAGF;MAAA,UACGN,iBAAiB,CAACO,GAAG,CAAC,CAACN,IAAI,EAAEO,KAAK,kBACjC;QAAA,UAAiBP;MAAI,GAAZO,KAAK;QAAA;QAAA;QAAA;MAAA,QACf;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GA/CuBlB,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}